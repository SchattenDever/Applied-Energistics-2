/*
 * This file is part of Applied Energistics 2.
 * Copyright (c) 2013 - 2015, AlgorithmX2, All rights reserved.
 *
 * Applied Energistics 2 is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Applied Energistics 2 is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Applied Energistics 2.  If not, see <http://www.gnu.org/licenses/lgpl>.
 */

plugins {
    id 'org.sonarqube' version '2.6'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'jacoco'
}

version = aeversion + "-" + aechannel + "-" + aebuild
group = aegroup

base {
    archivesName = aebasename
}

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    copyIdeResources = true


    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
        }

        client {
            property 'forge.enabledGameTestNamespaces', aebasename
        }

        server {
            property 'forge.enabledGameTestNamespaces', aebasename
            args '--nogui'
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', aebasename, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}




sourceSets {
    main {
        java {
            srcDir('main')
        }
    }
}

apply from: 'gradle/scripts/dependencies.gradle'
apply from: 'gradle/scripts/artifacts.gradle'
//apply from: 'gradle/scripts/optional.gradle'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

// Add Coremod Manifest
jar {
    manifest {
        attributes 'FMLAT': 'appeng_at.cfg'
    }

    // specify which files are really included, can control which APIs should be in
    include "appeng/**"
    include "assets/**"
    include "mcmod.info"
    include "pack.mcmeta"
    include "META-INF/appeng_at.cfg"
}



dependencies {
    minecraft 'net.minecraftforge:forge:' + exact_version
}


processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", exact_version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': exact_version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    // move access transformer to META-INF
    rename '(.+_at.cfg)', 'META-INF/$1'
}
